{"version":3,"sources":["components/nav/nav-components/UserDropdown.js","components/nav/nav-components/LoginRegister.js","components/nav/Nav.js","components/Home.js","components/Login.js","components/Register.js","components/customize/customize-components/ProductCard.js","components/customize/Customize.js","components/cart/cart-components/CartItem.js","components/cart/Cart.js","components/Address/Address.js","components/Address/AddressForm.js","components/checkout/checkout-components/ProductCard.js","components/checkout/Checkout.js","components/account-details/AccountDetails.js","components/DeleteAccount.js","components/Admin.js","App.js","index.js"],"names":["UserDropdown","props","useState","user_name","set_user_name","a","fetch","method","headers","localStorage","token","response","json","parseRes","getName","Dropdown","Toggle","variant","id","Menu","Item","to","onClick","setItem","setAuth","setAdmin","LoginRegister","className","Nav","isAdmin","authenticated","BASE_URL","Home","class","src","alt","Login","email","password","inputs","setInputs","badRequest","setBadRequest","notAuthorized","setNotAuthorized","onChange","e","target","name","value","onSubmit","preventDefault","body","JSON","stringify","ok","status","console","log","message","type","placeholder","Register","first_name","last_name","userExists","setUserExists","ProductCard","Card","style","width","Img","image","Body","Title","Text","description","price","product_id","Customize","freezers","setFreezers","tapkits","setTapKits","dripPans","setDripPans","thermostats","setThermostats","c02Tanks","setC02Tanks","getFreezers","useEffect","getDripPans","getThermostats","getTapKits","getC02Tanks","submitFreezer","freezer","alert","qty","submitTapkit","tapkit","submitDripPan","drippan","submitThermostat","thermostat","submitC02Tank","map","dripPan","c02Tank","CartItem","deleted","setDeleted","deleteItem","req","res","cart_item_id","setCartTotal","cartTotal","parseFloat","Cart","cartItems","setCartItems","getCartitems","total","i","length","formatter","Intl","NumberFormat","currency","format","cartItem","Address","address","street","city","state","zip","setEditing","AddressForm","window","location","reload","setAddress","Checkout","invalidRequest","setInvalidRequest","hasAddress","setHasAddress","editing","getAddress","item","AccountDetails","DeleteAccount","Admin","category","productExists","setProductExists","invalidCategory","setInvalidCategory","validEntry","setValidEntry","App","setAuthenticated","setIsAdmin","boolean","adminCheck","checkAuthentication","exact","path","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.69941125.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport {Link} from 'react-router-dom';\n\nconst UserDropdown = (props) => {\n\n  // The UserDropdown component gets setIsAdmin and setAuth from Nav\n  // If the user clicks the logout button, both of these values are set to false.\n\n  const [user_name, set_user_name] = useState('');\n\n  const getName = async () => {\n    const response = await fetch('/user/name', {\n                                  method: 'GET',\n                                  headers: {'token': localStorage.token}\n                                  });\n                              \n    const parseRes = await response.json();\n    set_user_name(parseRes);\n  }\n  getName();\n\n  const onClick = () => {\n    localStorage.setItem('token', '');\n    props.setAuth(false);\n    props.setAdmin(false);\n  }\n\n  return <>\n    <nav>\n      <Dropdown>\n        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n          {user_name}\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu>\n          <Dropdown.Item><Link to='/cart'>Cart</Link></Dropdown.Item>\n          <Dropdown.Item><Link to='/account-details'>Account Details</Link></Dropdown.Item>\n          <Dropdown.Item onClick={onClick}><Link to='/'>Logout</Link></Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    </nav>\n  </>\n}\n\nexport default UserDropdown;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\n\nconst LoginRegister = (props) => {\n  return <>\n      <nav>\n        <ul className='d-flex'>\n          <li><Link to='/login'><h3>Login</h3></Link></li>\n          <li><Link to='/register'><h3>Register</h3></Link></li>\n        </ul>\n      </nav>\n  </>\n}\n\nexport default LoginRegister;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport '../../App.css';\nimport UserDropdown from './nav-components/UserDropdown';\nimport LoginRegister from './nav-components/LoginRegister';\n\nconst Nav = (props) => {\n\n  // The Nav component gets isAdmin and setIsAdmin from App.\n  // If the user has administrative priveliges, they will have access\n  // to the admin page.\n\n  return <>\n    <header className='main-header'>\n\n      <nav className='d-flex'>\n        <h3>SK</h3>\n\n        <ul>\n          <li><Link to='/'><h3>Home</h3></Link></li>\n          <li><Link to='/customize'><h3>Customize</h3></Link></li>\n          {props.isAdmin && <li><Link to='/admin'><h3>Admin</h3></Link></li>}\n        </ul>\n      </nav>\n\n      {/* When not authenticated this will display buttons to login or register\n          When authenticated this will display the users name as a button with a\n          drop down menu with cart, account details, and logout buttons */}\n\n      {props.authenticated ?\n        <UserDropdown setAuth={props.setAuth}\n                      setAdmin={props.setAdmin}\n                      BASE_URL={props.BASE_URL}\n\n        /> :\n        <LoginRegister />}\n\n    </header>\n    <hr />\n  </>\n}\n\nexport default Nav;","import React from 'react';\n\n\nconst Home = () => {\n  return <>\n    <div id='lp-body'>\n      <header id='lp-header'>\n        <h1 id='lp-h1'>Schieffers Keezers</h1>\n        <h2 class='lp-h2'>You Customize It!</h2>\n        <h2 class='lp-h2'>We Build It!</h2>\n      </header>\n      <div id='img-div'>\n        <img src='./images/lp-image-1.jpg' alt='' id='keezer1'/>\n      </div>\n    </div>\n  </>\n}\n\nexport default Home;","import React, { useState } from 'react';\nimport '../App.css';\n\nconst Login = (props) => {\n\n  const [inputs, setInputs] = useState({\n    email: '',\n    password: ''\n  });\n  const {email, password} = inputs;\n\n  const [badRequest, setBadRequest] = useState(false);\n  const [notAuthorized, setNotAuthorized] = useState(false);\n\n  const onChange = e => {\n    setInputs({...inputs, [e.target.name]: e.target.value});\n  };\n\n  const onSubmit = async (e) => {\n    \n    // when the login form is submitted, a post request is sent to the server\n    // with the email and password. If the form is missing data or the email is\n    // not the correct pattern the response will have a status 400. If the data doesn't \n    // match any database records, the response will hava status 401. If the request\n    // doesn't have any errors, it will return a jwt token which is stored in local storage\n\n    e.preventDefault();\n    try {\n      const body = {email, password};\n\n      const response = await fetch('/auth/login', {\n                                   method: 'POST',\n                                   headers: {'Content-type': 'application/json'},\n                                   body: JSON.stringify(body)\n      })\n\n      if (!response.ok) {\n        if (response.status === 400) {\n          setBadRequest(true);\n          setNotAuthorized(false);\n        } else if (response.status === 401) {\n          setNotAuthorized(true);\n          setBadRequest(false);\n        }\n      } else {\n        const parseRes = await response.json();\n        localStorage.setItem('token', parseRes);\n        props.setAuth();\n      }\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  return <>\n  <div className='login-register'>\n    <h1 className='text-center my-3'>Login</h1>\n    {badRequest && <p className='invalid'>Fill out all fields and enter a valid email.</p>}\n    {notAuthorized && <p className='invalid'>The email or password you entered was not correct.</p>}\n\n    <form onSubmit={onSubmit}>\n      <input type='email' name='email' value={email} onChange={onChange} placeholder='email' className='form-control my-3' />\n      <input type='password' name='password' value={password} onChange={onChange} placeholder='password' className='form-control my-3' />\n      <button className=\"btn btn-success btn-block\">Submit</button>\n    </form>\n  </div>\n  </>\n}\n\nexport default Login;","import React, { useState } from 'react';\n\nconst Register = ({ setAuth }) => {\n\n  const [inputs, setInputs] = useState({\n    email: '',\n    password: '',\n    first_name: '',\n    last_name: ''\n  });\n  const {email, password, first_name, last_name} = inputs;\n\n  const [badRequest, setBadRequest] = useState(false);\n  const [userExists, setUserExists] = useState(false);\n\n  const onChange = e => {\n    setInputs({...inputs, [e.target.name]: e.target.value})\n  };\n\n  const onSubmit = async (e) => {\n\n    // when the register form is submitted, a post request is sent to the server\n    // with the email, password, first name, and last name submitted. If the form is \n    // missing data or the email is not the correct pattern the response will have a status 400.\n    // If the database already has a record using the email that was entered, the response\n    // will have a status 401. If the request doesn't have any errors, a new record will be\n    // created in the users table and a jwt token will be sent in the response and stored\n    // in local storage\n\n    e.preventDefault();\n    try {\n      const body = {email, password, first_name, last_name};\n\n      const response = await fetch('/auth/register', {\n                                   method:'POST',\n                                   headers:{'Content-type': 'application/json'},\n                                   body: JSON.stringify(body)\n      });\n\n      if (!response.ok) {\n        if (response.status === 400) {\n          setBadRequest(true);\n          setUserExists(false);\n        } else if (response.status === 401) {\n          setUserExists(true);\n          setBadRequest(false);\n        }\n      } else {\n        const parseRes = await response.json();\n        localStorage.setItem('token', parseRes);\n        setAuth();\n      }\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  return <>\n  <div className='login-register'>\n    <h1 className='text-center my-5'>Register</h1>\n    {badRequest && <p class='invalid'>Fill out all fields and enter a valid email.</p>}\n    {userExists && <p class='invalid'>The email you entered is already in use</p>}\n\n    <form onSubmit={onSubmit}>\n      <input type='email' name='email' placeholder='email' value={email} onChange={onChange} className='form-control my-3' />\n      <input type='password' name='password' placeholder='password' value={password} onChange={onChange} className='form-control my-3' />\n      <input type='text' name='first_name' placeholder='first name' value={first_name} onChange={onChange} className='form-control my-3' />\n      <input type='text' name='last_name' placeholder='last name' value={last_name} onChange={onChange} className='form-control my-3' />\n      <button className='btn btn-success btn-block'>Submit</button>\n    </form>\n  </div>\n  </>\n}\n\nexport default Register;","import React from 'react';\nimport '../../../App.css';\nimport Card from 'react-bootstrap/Card';\n\nconst ProductCard = (props) => {\n\n  // The ProductCard component takes in values for image, name,\n  // description, and price. This component is generated by\n  // mapping the products array to the makeProductCard function\n  // which returns a custom ProductCard for each product.\n\n  return <>\n  <div className='p-4'>\n    <Card style={{ width: '18rem' }} className='p-4 product-card'>\n      <div className='card-img'><Card.Img variant=\"top\" src={`images/${props.image}`}/></div>\n      <Card.Body>\n        <Card.Title>{props.name}</Card.Title>\n        <Card.Text>{props.description}</Card.Text>\n        <Card.Text className='mba'>${props.price}</Card.Text>\n        <input\n          type='radio'\n          value={props.product_id}\n          name={props.type}\n        />\n\n      </Card.Body>\n    </Card>\n  </div>\n  </>\n};\n\nexport default ProductCard;","import React, {useState, useEffect} from 'react';\nimport '../../App.css';\nimport ProductCard from './customize-components/ProductCard';\n\nconst Customize = (props) => {\n\n  // DYNAMICALLY SEPERATING ALL PRODUCTS BY CATEGORY\n  // ****************************************************************************\n  // const [products, setProducts] = useState([]);\n  // const [categories, setCategories] = useState([]);\n\n  // const getTypes = async () => {\n  //   const response = await fetch(props.BASE_URL + '/product/types');\n  //   const parseRes = await response.json();\n  //   const array = []\n\n  //   for (let i=0; i<parseRes.length; i++) {\n  //     array.push(parseRes[i].name);\n  //   }\n  //   setCategories(array);\n  // }\n  // useEffect(() => { getTypes(); },[]);\n\n  // const getAll = async () => {\n  // const response = await fetch(props.BASE_URL + '/product/all')\n  // const parseRes = await response.json();\n  // setProducts(parseRes);\n  // }\n  // useEffect(() => { getAll(); },[]);\n\n  // const itemsByType = {}\n\n  // for (let i=0; i<categories.length; i++) {\n  //   itemsByType[categories[i]] = [];\n  // }\n\n  // for (let i=0; i<products.length; i++) {\n  //   itemsByType[products[i].category].push(products[i]);\n  // }\n  // console.log('itemsByType: ', itemsByType);\n\n  // NOT DYNAMICALLY SEPERATING ALL PRODUCTS BY CATEGORY\n  // ****************************************************************************\n  // state variables used for holding data on each product, seperated by category\n\n  const [freezers, setFreezers] = useState([]);\n  const [tapkits, setTapKits] = useState([]);\n  const [dripPans, setDripPans] = useState([]);\n  const [thermostats, setThermostats] = useState([]);\n  const [c02Tanks, setC02Tanks] = useState([]);\n\n  // functions for querying the db for data on products of each category\n\n  const getFreezers = async () => {\n    const response = await fetch('/product/freezer');\n    const parseRes = await response.json();\n    setFreezers(parseRes);\n  }\n  useEffect(() => { getFreezers(); },[]);\n\n  const getDripPans = async () => {\n    const response = await fetch('/product/drippan');\n    const parseRes = await response.json();\n    setDripPans(parseRes);\n  }\n  useEffect(() => { getDripPans(); },[]);\n\n  const getThermostats = async () => {\n    const response = await fetch('/product/thermostat');\n    const parseRes = await response.json();\n    setThermostats(parseRes);\n  }\n  useEffect(() => { getThermostats(); },[]);\n\n  const getTapKits = async () => {\n    const response = await fetch('/product/tapkit');\n    const parseRes = await response.json();\n    setTapKits(parseRes);\n  }\n  useEffect(() => { getTapKits(); },[]);\n\n  const getC02Tanks = async () => {\n    const response = await fetch('/product/c02tank');\n    const parseRes = await response.json();\n    setC02Tanks(parseRes);\n  }\n  useEffect(() => { getC02Tanks(); },[]);\n\n  // onSubmit functions for adding products of each category to cart\n\n  const submitFreezer = async (e) => {\n    e.preventDefault();\n    const product_id = e.target.freezer.value;\n    if (product_id === '') {\n      alert('You have to choose a freezer.');\n    } \n    else {\n      try {\n        const body = {product_id: product_id, qty: 1}\n        \n        const response = await fetch('/user/addCartItem', {\n                                     method: 'POST',\n                                     headers: {token: localStorage.token,\n                                               'Content-type': 'application/json'},\n                                     body: JSON.stringify(body)\n        })\n        if (!response.ok) {\n          if (response.status === 403) {\n            alert('You must be logged in');\n          } else if (response.status === 500) {\n            alert('There was a problem adding product to cart');\n          }\n        } else {\n          alert('Product was successfully added to cart');\n        } \n      } catch (err) {\n        console.log(err.message);\n      }\n    }\n  }\n\n  const submitTapkit = async (e) => {\n    e.preventDefault();\n    const product_id = e.target.tapkit.value;\n    if (product_id === '') {\n      alert('You have to choose a tap kit.');\n    } \n    else {\n      try {\n        const body = {product_id: product_id, qty: 1}\n        \n        const response = await fetch('/user/addCartItem', {\n                                     method: 'POST',\n                                     headers: {token: localStorage.token,\n                                               'Content-type': 'application/json'},\n                                     body: JSON.stringify(body)\n        })\n        if (!response.ok) {\n          if (response.status === 403) {\n            alert('You must be logged in');\n          } else if (response.status === 500) {\n            alert('There was a problem adding product to cart');\n          }\n        } else {\n          alert('Product was successfully added to cart');\n        } \n      } catch (err) {\n        console.log(err.message);\n      }\n    }\n  }\n\n  const submitDripPan = async (e) => {\n    e.preventDefault();\n    const product_id = e.target.drippan.value;\n    if (product_id === '') {\n      alert('You have to choose a drip pan.');\n    } \n    else {\n      try {\n        const body = {product_id: product_id, qty: 1}\n        \n        const response = await fetch('/user/addCartItem', {\n                                     method: 'POST',\n                                     headers: {token: localStorage.token,\n                                               'Content-type': 'application/json'},\n                                     body: JSON.stringify(body)\n        })\n        if (!response.ok) {\n          if (response.status === 403) {\n            alert('You must be logged in');\n          } else if (response.status === 500) {\n            alert('There was a problem adding product to cart');\n          }\n        } else {\n          alert('Product was successfully added to cart');\n        } \n      } catch (err) {\n        console.log(err.message);\n      }\n    }\n  }\n\n  const submitThermostat = async (e) => {\n    e.preventDefault();\n    const product_id = e.target.thermostat.value;\n    if (product_id === '') {\n      alert('You have to choose a thermostat.');\n    } \n    else {\n      try {\n        const body = {product_id: product_id, qty: 1}\n        \n        const response = await fetch('/user/addCartItem', {\n                                     method: 'POST',\n                                     headers: {token: localStorage.token,\n                                               'Content-type': 'application/json'},\n                                     body: JSON.stringify(body)\n        })\n        if (!response.ok) {\n          if (response.status === 403) {\n            alert('You must be logged in');\n          } else if (response.status === 500) {\n            alert('There was a problem adding product to cart');\n          }\n        } else {\n          alert('Product was successfully added to cart');\n        } \n      } catch (err) {\n        console.log(err.message);\n      }\n    }\n  }\n  \n  const submitC02Tank = async (e) => {\n    e.preventDefault();\n    const product_id = e.target['c02tank'].value;\n    console.log(product_id);\n    if (product_id === '') {\n      alert('You have to choose a c02 tank.');\n    } \n    else {\n      try {\n        const body = {product_id: product_id, qty: 1}\n        \n        const response = await fetch('/user/addCartItem', {\n                                     method: 'POST',\n                                     headers: {token: localStorage.token,\n                                               'Content-type': 'application/json'},\n                                     body: JSON.stringify(body)\n        })\n        if (!response.ok) {\n          if (response.status === 403) {\n            alert('You must be logged in');\n          } else if (response.status === 500) {\n            alert('There was a problem adding product to cart');\n          }\n        } else {\n          alert('Product was successfully added to cart');\n        } \n      } catch (err) {\n        console.log(err.message);\n      }\n    }\n  }\n\n\n\n\n\n  // const onSubmit = async (e, category) => {\n  //   e.preventDefault();\n  //   const product_id = e.target[category].value;\n  //   console.log(product_id);\n  //   // if (product_id === '') {\n  //   //   alert('You have to choose a c02 tank.');\n  //   // } \n  //   // else {\n  //   //   try {\n  //   //     const body = {product_id: product_id, qty: 1}\n        \n  //   //     const response = await fetch(props.BASE_URL + '/user/addCartItem', {\n  //   //                                  method: 'POST',\n  //   //                                  headers: {token: localStorage.token,\n  //   //                                            'Content-type': 'application/json'},\n  //   //                                  body: JSON.stringify(body)\n  //   //     })\n  //   //     if (!response.ok) {\n  //   //       if (response.status === 403) {\n  //   //         alert('You must be logged in');\n  //   //       } else if (response.status === 500) {\n  //   //         alert('There was a problem adding product to cart');\n  //   //       }\n  //   //     } else {\n  //   //       alert('Product was successfully added to cart');\n  //   //     } \n  //   //   } catch (err) {\n  //   //     console.log(err.message);\n  //   //   }\n  //   // }\n  // }\n\n\n\n\n\n\n\n  // const createForm = (category) => {\n  //   console.log('creating form');\n\n  //   return <>\n  //     <form onSubmit={category => { return onSubmit(category) }} className='p-5'>\n  //       <h2>Choose your {category}</h2>\n  //       <div classname='d-flex flex-wrap'>\n  //         {itemsByType[category].map(item => {return <ProductCard {...item} BASE_URL={props.BASE_URL} />})}\n  //       </div>\n  //       <buttom type='submit' className='cart-button'>Add To Cart</buttom>\n  //     </form>\n  //   </>\n  // }\n\n\n\n  return <>\n    <h1>Customize Your Keezer</h1>\n\n\n    {/* {categories.map(category => { return createForm(category) })}\n    {console.log(categories)} */}\n\n\n\n    <form onSubmit={submitFreezer} className='p-5'>\n      <h2>Choose Your Freezer</h2>\n      <div className='d-flex flex-wrap'>\n        {freezers.map(freezer => {return <ProductCard {...freezer} BASE_URL={props.BASE_URL} />})}\n      </div>\n      <button type='submit' className='cart-button'>Add To Cart</button>\n    </form>\n\n    <form onSubmit={submitTapkit} className='p-5'>\n      <h2>Choose Your Tap Kit</h2>\n      <div className='d-flex flex-wrap'>\n        {tapkits.map(tapkit => {return <ProductCard {...tapkit} BASE_URL={props.BASE_URL}/>})}\n      </div>\n      <button type='submit' className='cart-button'>Add To Cart</button>\n    </form>\n\n    <form onSubmit={submitDripPan} className='p-5'>\n      <h2>Choose Your Drip Pan</h2>\n      <div className='d-flex flex-wrap'>\n        {dripPans.map(dripPan => {return <ProductCard {...dripPan} BASE_URL={props.BASE_URL}/>})}\n      </div>\n      <button type='submit' className='cart-button'>Add To Cart</button>\n    </form>\n\n    <form onSubmit={submitThermostat} className='p-5'>\n      <h2>Choose Your Thermostat</h2>\n      <div className='d-flex flex-wrap'>\n        {thermostats.map(thermostat => {return <ProductCard {...thermostat} BASE_URL={props.BASE_URL}/>})}\n      </div>\n      <button type='submit' className='cart-button'>Add To Cart</button>\n    </form>\n\n    <form onSubmit={submitC02Tank} className='p-5'>\n      <h2>Choose Your C02 Tank</h2>\n      <div className='d-flex flex-wrap'>\n        {c02Tanks.map(c02Tank => {return <ProductCard {...c02Tank} BASE_URL={props.BASE_URL}/>})}\n      </div>\n      <button type='submit' className='cart-button'>Add To Cart</button>\n    </form>\n  </>\n}\n\nexport default Customize;","import React, {useState} from 'react';\n\nconst CartItem = (props) => {\n\n  const [deleted, setDeleted] = useState(false);\n\n  const deleteItem = async (req, res) => {\n    const body = {cart_item_id: props.cart_item_id}\n\n    const response = await fetch('/user/deleteCartItem', {\n                                 method: 'delete',\n                                 headers: {token: localStorage.token,\n                                          'Content-type': 'application/json'},\n                                 body: JSON.stringify(body)\n    })\n    if (!response.ok) {\n      if (response.status === 403) {\n        alert('You must be logged in');\n      } else if (response.status === 500) {\n        alert('There was a problem deleting product to cart');\n      }\n    } else {\n      setDeleted(true);\n      props.setCartTotal(props.cartTotal - parseFloat(props.price));\n    }\n  }\n\n  return <>\n    <div class={`cart-item ${deleted ? 'deleted' : ''}`}>\n      <div class='d-flex justify-content-between'>\n        <div>\n          <h2>{props.name}</h2>\n          <p>{props.description}</p>\n          <p>${props.price}</p>\n        </div>\n        <img src={`images/${props.image}`} class='cart-image' />\n        <button onClick={deleteItem} class='delete-button'>delete</button>\n      </div>\n    </div>\n  </>\n}\n\nexport default CartItem;","import React, {useState, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport CartItem from './cart-components/CartItem';\n\nconst Cart = (props) => {\n\n  const [cartItems, setCartItems] = useState([]);\n  const [user_name, set_user_name] = useState('');\n  const [cartTotal, setCartTotal] = useState(0.0);\n\n  const getName = async () => {\n    const response = await fetch('/user/name', {\n                                  method: 'GET',\n                                  headers: {'token': localStorage.token}\n                                  });\n                              \n    const parseRes = await response.json();\n    set_user_name(parseRes);\n  }\n  getName();\n\n  const getCartitems = async () => {\n\n    // This function makes a request to the server for the cart\n    // items of the user currently logged in. The request passes\n    // the users jwt token which contains the users user_id which is\n    // used to query the database for the users cart items.\n\n    const response = await fetch('/user/getUserCart', {\n                                 method: 'GET',\n                                 headers: {token: localStorage.token}\n    })\n    const parseRes = await response.json();\n\n    let total = 0.0\n    for (let i=0.0; i<parseRes.length; i++) {\n      total += parseFloat(parseRes[i].price);\n    }\n\n    setCartTotal(total);\n    setCartItems(parseRes);\n  }\n  useEffect(() => { getCartitems(); },[]);\n\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n  });\n\n  return <>\n    <div class='cart-title'>\n      <div class='d-flex justify-content-between'>\n       <h1>{user_name}'s Cart</h1>\n       <h2>Total: {formatter.format(cartTotal)}</h2>\n       <Link to='/checkout'>Checkout</Link>\n      </div>\n      \n    </div>\n    <div class='cart-display'>\n      {cartItems.map(cartItem => {return <CartItem { ...cartItem}\n                                                   BASE_URL={props.BASE_URL}\n                                                   cartTotal={cartTotal}\n                                                   setCartTotal={setCartTotal} />\n                                                   })}\n    </div>\n  </>\n}\n\nexport default Cart;","import React from 'react';\n\nconst Address = (props) => {\n\n  const onClick = () => {\n    props.setEditing(true);\n  }\n\n  return <>\n  <h2>Address</h2>\n    <p>{props.address.street}</p>\n    <p>{props.address.city}, {props.address.state} {props.address.zip}</p>\n    <button onClick={onClick}>Edit</button>\n  </>\n}\n\nexport default Address;","import React, {useState} from 'react';\n\nconst AddressForm = (props) => {\n\n  const [badRequest, setBadRequest] = useState(false);\n\n  const [inputs, setInputs] = useState({\n    'street': props.address.street,\n    'city': props.address.city,\n    'state': props.address.state,\n    'zip': props.address.zip\n  });\n  const {street, city, state, zip} = inputs;\n\n  const onChange = (e) => {\n    setInputs({...inputs, [e.target.name]: e.target.value});\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const body = {street, city, state, zip};\n\n      const response = await fetch('/user/update-address', {\n                                   method: 'POST',\n                                   headers: {'Content-Type': 'application/json',\n                                             'token': localStorage.token},\n                                   body: JSON.stringify(body)                       \n      });\n      if (!response.ok) {\n        if (response.status === 400) {\n          setBadRequest(true);\n        } else if (response.status === 403) {\n          window.location.reload();\n        }\n      } else {\n        const parseRes = await response.json();\n        props.setAddress(parseRes);\n        props.setEditing(false);\n      }\n    } catch (err) {\n      console.log(err.message)\n    };\n  };\n\n  const onClick = (e) => {\n    e.preventDefault();\n    props.setEditing(false);\n  }\n\n  return <>\n  <h2>Update Address</h2>\n    {badRequest && <p className='invalid'>Fill out all fields.</p>}\n    <form onSubmit={onSubmit}>\n      <div className='pb-4'>\n        <p>Street</p>\n        <input type='text' name='street' value={street} onChange={onChange}></input>\n        <p className='pt-4'>City</p>\n        <input type='text' name='city' value={city} onChange={onChange}></input>\n        <p className='pt-4'>State</p>\n        <input type='text' name='state' value={state} onChange={onChange}></input>\n        <p className='pt-4'>Zip</p>\n        <input type='text' name='zip' value={zip} onChange={onChange}></input>\n      </div>\n      <div>\n        <button type='submit' id='submit-address'>Submit</button>\n        <button onClick={onClick}>Cancel</button>\n      </div>\n    </form>\n  </>\n}\n\nexport default AddressForm;","import React from 'react';\nimport '../../../App.css';\nimport Card from 'react-bootstrap/Card';\n\nconst ProductCard = (props) => {\n\n  // The ProductCard component takes in values for image, name,\n  // description, and price. This component is generated by\n  // mapping the products array to the makeProductCard function\n  // which returns a custom ProductCard for each product.\n\n  return <>\n  <div className='p-4'>\n    <Card style={{ width: '18rem' }} className='p-4 product-card'>\n      <div className='card-img'><Card.Img variant=\"top\" src={`images/${props.image}`}/></div>\n      <Card.Body>\n        <Card.Title>{props.name}</Card.Title>\n        <Card.Text>{props.description}</Card.Text>\n        <Card.Text className='mba'>${props.price}</Card.Text>\n      </Card.Body>\n    </Card>\n  </div>\n  </>\n};\n\nexport default ProductCard;","import React, {useState, useEffect} from 'react';\nimport Address from '../Address/Address';\nimport AddressForm from '../Address/AddressForm';\nimport ProductCard from './checkout-components/ProductCard'\n\n\nconst Checkout = (props) => {\n\n  const [invalidRequest, setInvalidRequest] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n  const [cartTotal, setCartTotal] = useState(0.0);\n  const [hasAddress, setHasAddress] = useState(false);\n  const [editing, setEditing] = useState(false);\n  const [address, setAddress] = useState({\n    'street': '',\n    'city': '',\n    'state': '',\n    'zip': ''\n  });\n\n  const getAddress = async () => {\n    const response = await fetch('/user/address', {\n                                 method: 'GET',\n                                 headers: {'token': localStorage.token}\n    })\n    if (!response.ok) {\n      if (response.status === 404) {\n        setEditing(true);\n      }\n    } else {\n      const parseRes = await response.json();\n      setEditing(false);\n      setHasAddress(true);\n      setAddress(parseRes);\n    }\n  }\n  useEffect(() => { getAddress(); },[]);\n\n  const getCartitems = async () => {\n\n    // This function makes a request to the server for the cart\n    // items of the user currently logged in. The request passes\n    // the users jwt token which contains the users user_id which is\n    // used to query the database for the users cart items.\n\n    const response = await fetch('/user/getUserCart', {\n                                 method: 'GET',\n                                 headers: {token: localStorage.token}\n    })\n    const parseRes = await response.json();\n\n    let total = 0.0\n    for (let i=0.0; i<parseRes.length; i++) {\n      total += parseFloat(parseRes[i].price);\n    }\n    \n    setCartTotal(total);\n    setCartItems(parseRes);\n  }\n  useEffect(() => { getCartitems(); },[]);\n\n  const onClick = async (e) => {\n    e.preventDefault();\n\n    if (!hasAddress) {\n      setInvalidRequest(true);\n    } else {\n      const response = await fetch('/checkout/checkout', {\n                                   method: 'GET',\n                                   headers: {token: localStorage.token}\n      });\n\n      if (!response.ok) {\n        if (response.status == 401) {\n          setInvalidRequest(true);\n        }\n      } else {\n        console.log('suh');\n        setInvalidRequest(false);\n      }\n    }\n\n    \n  }\n\n\n\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n  });\n\n  return <>\n    <div class='d-flex justify-content-between'>\n      <h1>Checkout</h1>\n      <h2>Total: {formatter.format(cartTotal)}</h2>\n    </div>\n    \n    <div id='checkout-body'>\n\n    {editing ?\n      <AddressForm setEditing={setEditing} setAddress={setAddress} address={address} hasAddress={hasAddress} BASE_URL={props.BASE_URL}/>\n      :\n      <Address setEditing={setEditing} address={address} BASE_URL={props.BASE_URL}/>}\n    </div>\n\n    \n\n    <div className='d-flex flex-wrap'>\n      {cartItems.map(item => { return <ProductCard {...item} BASE_URL={props.BASE_URL} />})}\n    </div>\n\n    <div class='d-flex justify-content-right'>\n      <button onClick={onClick}><h1>Checkout</h1></button>\n      {invalidRequest && <p className='invalid'>you must have an address on file and choose atleast a freezer and a tap kit to checkout</p>}\n    </div>\n    \n  </>\n}\n\nexport default Checkout;","import React, {useState, useEffect} from 'react';\nimport Address from '../Address/Address';\nimport AddressForm from '../Address/AddressForm';\n\n\nconst AccountDetails = (props) => {\n\n  const [editing, setEditing] = useState(false);\n  const [address, setAddress] = useState({\n    'street': '',\n    'city': '',\n    'state': '',\n    'zip': ''\n  });\n\n  const getAddress = async () => {\n    const response = await fetch('/user/address', {\n                                 method: 'GET',\n                                 headers: {'token': localStorage.token}\n    })\n    if (!response.ok) {\n      if (response.status === 404) {\n        setEditing(true);\n      }\n    } else {\n      const parseRes = await response.json();\n      setAddress(parseRes);\n    }\n  }\n  useEffect(() => { getAddress(); },[]);\n\n  return <>\n    <h1>Account Details</h1>\n    <div id='ad-body'>\n\n      {editing ?\n      <AddressForm setEditing={setEditing} setAddress={setAddress} address={address} BASE_URL={props.BASE_URL}/>\n      :\n      <Address setEditing={setEditing} address={address} BASE_URL={props.BASE_URL}/>}\n\n    </div>\n  </>\n}\n\nexport default AccountDetails;","import React from 'react';\n\n\nconst DeleteAccount = () => {\n  return <>\n    <h1>DeleteAccount</h1>\n  </>\n}\n\nexport default DeleteAccount;","import React, { useState } from 'react';\n\nconst Admin = () => {\n\n  const [inputs, setInputs] = useState({\n    name: '',\n    description: '',\n    price: '',\n    category: ''\n  });\n  const {name, description, price, category} = inputs;\n\n  const [badRequest, setBadRequest] = useState(false);\n  const [productExists, setProductExists] = useState(false);\n  const [invalidCategory, setInvalidCategory] = useState(false);\n  const [validEntry, setValidEntry] = useState(false);\n\n  const onChange = e => {\n    setInputs({...inputs, [e.target.name]: e.target.value})\n  };\n\n  const onSubmit = async (e) => {\n\n    // When the product form is submitted, a post request is sent to the server\n    // with the name, description, price, and category of the product. If there is\n    // missing fields, an existing product by the same name, the price has an invalid format,\n    // or the category isn't a valid category, the request will have an error status in the \n    // response. Otherwise, the new product will be added to the products tabel in the db.\n\n    e.preventDefault();\n    try {\n      const body = {name, description, price, category};\n\n      const response = await fetch('/product/add', {\n                                   method:'POST',\n                                   headers:{'Content-type': 'application/json'},\n                                   body: JSON.stringify(body)\n      });\n\n      if (!response.ok) {\n        if (response.status === 400) {\n          setBadRequest(true);\n          setProductExists(false);\n          setInvalidCategory(false);\n          setValidEntry(false);\n        } else if (response.status === 401) {\n          setProductExists(true);\n          setBadRequest(false);\n          setInvalidCategory(false);\n          setValidEntry(false);\n        } else if (response.status === 404) {\n          setInvalidCategory(true);\n          setProductExists(false);\n          setBadRequest(false);\n          setValidEntry(false);\n        }\n      } else {\n        setValidEntry(true);\n        setInvalidCategory(false);\n        setProductExists(false);\n        setBadRequest(false);\n        setInputs({name: '', description: '', price: '', category: ''})\n        const parseRes = await response.json();\n      }\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  return <>\n  <h1 className='text-center my-5'>Add a Product</h1>\n  {badRequest && <p className='invalid'>Fill out all fields. Make sure to enter a valid price.</p>}\n  {productExists && <p className='invalid'>The name you entered is already in use</p>}\n  {invalidCategory && <p className='invalid'>The category you entered is invalid</p>}\n  {validEntry && <p>The product has been submitted</p>}\n\n  <form onSubmit={onSubmit}>\n    <input type='text' name='name' placeholder='name' value={name} onChange={onChange} className='form-control my-3' />\n    <input type='text' name='description' placeholder='description' value={description} onChange={onChange} className='form-control my-3' />\n    <input type='text' name='price' placeholder='price' value={price} onChange={onChange} className='form-control my-3' />\n    <input type='text' name='category' placeholder='category' value={category} onChange={onChange} className='form-control my-3' />\n    <button className='btn btn-success btn-block'>Submit</button>\n  </form>\n  </>\n}\n\nexport default Admin;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\n\n// ROUTES\nimport Nav from './components/nav/Nav';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Customize from './components/customize/Customize';\nimport Cart from './components/cart/Cart';\nimport Checkout from './components/checkout/Checkout';\nimport AccountDetails from './components/account-details/AccountDetails';\nimport DeleteAccount from './components/DeleteAccount';\nimport Admin from './components/Admin';\n\n// APP\n// *****************************************************************************************\nconst App = () => {\n\n  const [authenticated, setAuthenticated] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [BASE_URL, _] = useState('http://localhost:3002')\n\n  const setAuth = boolean => {\n    setAuthenticated(boolean);\n  };\n\n  const setAdmin = boolean => {\n    setIsAdmin(boolean);\n  }\n\n  const adminCheck = async () => {\n\n    // this function checks to see if the the user currently logged in\n    // has administrative priveleges. If they do, isAdmin is set to true\n\n    try {\n      const response = await fetch('/admin/check', {\n                                    method: 'GET',\n                                    headers: {'token': localStorage.token}\n      });\n      if (!response.ok) {\n        if (response.status === 403) {\n          setIsAdmin(false);\n        } else if (response.status === 500) {\n          setIsAdmin(false);\n        }\n      } else {\n        const parseRes = await response.json();\n        setIsAdmin(parseRes);\n      } \n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n  useEffect(() => {\n    adminCheck();\n  },[]);\n\n  const checkAuthentication = async () => {\n\n    // this function checks to see if the the user is authenticated. The /auth/verify\n    // route checks to see if the use has a token, if it's valid, and if it is,\n    // returns true and authenticated is set to true, otherwise it returns\n    // status 403 not authorized.\n\n    try {\n      const response = await fetch('/auth/verify', {\n                                   method: 'GET',\n                                   headers: {token: localStorage.token}\n      });\n      if (!response.ok) {\n        if (response.status === 403) {\n          setAuthenticated(false);\n        } else if (response.status === 500) {\n          setAuthenticated(false);\n        }\n      } else {\n        const parseRes = await response.json();\n        setAuthenticated(parseRes);\n      }\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n  useEffect(() => {\n    checkAuthentication();\n  })\n\n  return <>\n    <Router>\n      <Nav authenticated={authenticated}\n          setAuth={setAuth}\n          isAdmin={isAdmin}\n          setAdmin={setAdmin}\n          BASE_URL={BASE_URL}\n      />\n      <div className='body'>\n        <Switch>\n\n          <Route exact path='/'\n                 render={props => <Home {...props} BASE_URL={BASE_URL} />}\n          />\n\n          <Route exact path='/login'\n                 render={props => !authenticated ?\n                                  <Login {...props} setAuth={setAuth} BASE_URL={BASE_URL} /> :\n                                  <Redirect to='/' /> }\n          />\n\n          <Route exact path='/register' \n                 render={props => !authenticated ?\n                                  <Register {...props} setAuth={setAuth} BASE_URL={BASE_URL} /> :\n                                  <Redirect to='/' /> }\n          />\n\n          <Route exact path='/customize'\n                 render={props => <Customize {...props} BASE_URL={BASE_URL} />}\n          />\n\n          <Route exact path='/cart'\n                 render={props => authenticated ?\n                                  <Cart {...props} BASE_URL={BASE_URL} /> :\n                                  <Redirect to='/' />}\n          />\n\n          <Route exact path='/checkout'\n                 render={props => authenticated ?\n                                  <Checkout {...props} BASE_URL={BASE_URL} /> :\n                                  <Redirect to='/' />}\n          />\n\n          <Route exact path='/account-details'\n                 render={props => authenticated ?\n                                  <AccountDetails {...props} BASE_URL={BASE_URL} /> :\n                                  <Redirect to='/' />}\n          />\n\n          <Route exact path='/delete-account'\n                 render={props => authenticated ?\n                                  <DeleteAccount {...props} BASE_URL={BASE_URL} /> :\n                                  <Redirect to='/' />}\n          />\n\n          <Route exact path='/admin'\n                 render={props => isAdmin ?\n                                  <Admin {...props} BASE_URL={BASE_URL} /> :\n                                  <Redirect to='/' /> }\n          />\n        </Switch>\n      </div>\n    </Router>\n  </>\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}